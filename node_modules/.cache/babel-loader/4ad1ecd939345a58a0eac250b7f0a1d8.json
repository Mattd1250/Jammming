{"ast":null,"code":"var clientId = \"1755523544f9437e937f776f3210bde4\";\nvar redirctURL = \"http://localhost:3000/\";\nvar authEndpoint = \"https//accounts.spotify.com/authorize\";\nvar accessToken;\nvar expiresIn;\nvar Spotify = {\n  getAccessToken: function getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } else {\n      if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n        accessToken = window.location.href.match(/access_token=([^&]*)/);\n        expiresIn = window.location.href.match(/expires_in=([^&]*)/);\n        console.log(accessToken);\n        window.setTimeout(function () {\n          return accessToken = \"\";\n        }, expiresIn * 1000);\n        window.history.pushState(\"Access Token\", null, \"/\");\n        return accessToken;\n      } else {\n        var url = \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirctURL);\n        window.location = url;\n      }\n    }\n  },\n  search: function search(searchTerm) {\n    accessToken = this.getAccessToken;\n    console.log(accessToken);\n    return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(Searchterm), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jsonResponse) {\n      if (jsonResponse.tracks.items) {\n        return jsonResponse.track.items.map(function (track) {\n          return {\n            id: track.id,\n            name: track.name,\n            artist: track.artist,\n            album: track.album,\n            uri: track.uri\n          };\n        });\n      }\n    });\n  },\n  savePlaylist: function savePlaylist(playlistName, trackURIs) {\n    if (!playlistName || !trackURIs) {\n      return;\n    } else {\n      var userUrl = \"https://api.spotify.com/v1/me\";\n      var headers = {\n        Authorization: \"Bearer \".concat(accessToken)\n      };\n      var userId = undefined;\n      var playlistId = undefined;\n      fetch(userUrl, {\n        headers: headers\n      }).then(function (response) {\n        return response.json();\n      }).then(function (jsonResponse) {\n        return userId = jsonResponse.id;\n      }).then(function () {\n        var createPlaylistUrl = \"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists\");\n        fetch(createPlaylistUrl, {\n          method: \"POST\",\n          headers: headers,\n          body: JSON.stringify({\n            name: playlistName\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (jsonResponse) {\n          return playlistId = jsonResponse.id;\n        }).then(function () {\n          var addPlaylistTracksUrl = \"https://api.spotify.com/v1/users/\".concat(userId, \"/playlists/\").concat(playlistId, \"/tracks\");\n          fetch(addPlaylistTracksUrl, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n              uris: trackURIs\n            })\n          });\n        });\n      });\n    }\n  }\n};\nexport default Spotify;","map":{"version":3,"sources":["/Users/Shared/myProject/jamming/src/util/Spodify.js"],"names":["clientId","redirctURL","authEndpoint","accessToken","expiresIn","Spotify","getAccessToken","window","location","href","match","console","log","setTimeout","history","pushState","url","search","searchTerm","fetch","Searchterm","headers","Authorization","then","response","json","jsonResponse","tracks","items","track","map","id","name","artist","album","uri","savePlaylist","playlistName","trackURIs","userUrl","userId","undefined","playlistId","createPlaylistUrl","method","body","JSON","stringify","addPlaylistTracksUrl","uris"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,kCAAjB;AACA,IAAMC,UAAU,GAAG,wBAAnB;AACA,IAAMC,YAAY,GAAG,uCAArB;AACA,IAAIC,WAAJ;AACA,IAAIC,SAAJ;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,cADc,4BACG;AACf,QAAIH,WAAJ,EAAiB;AACf,aAAOA,WAAP;AACD,KAFD,MAEO;AACL,UACEI,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,KACAH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAFF,EAGE;AACAP,QAAAA,WAAW,GAAGI,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,CAAd;AACAN,QAAAA,SAAS,GAAGG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACAI,QAAAA,MAAM,CAACM,UAAP,CAAkB;AAAA,iBAAOV,WAAW,GAAG,EAArB;AAAA,SAAlB,EAA4CC,SAAS,GAAG,IAAxD;AACAG,QAAAA,MAAM,CAACO,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AACA,eAAOZ,WAAP;AACD,OAVD,MAUO;AACL,YAAIa,GAAG,aAAMd,YAAN,wBAAgCF,QAAhC,4EAA0GC,UAA1G,CAAP;AACAM,QAAAA,MAAM,CAACC,QAAP,GAAkBQ,GAAlB;AACD;AACF;AACF,GApBa;AAsBdC,EAAAA,MAtBc,kBAsBPC,UAtBO,EAsBK;AACjBf,IAAAA,WAAW,GAAG,KAAKG,cAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACA,WAAOgB,KAAK,0DACwCC,UADxC,GAEV;AACEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,mBAAYnB,WAAZ;AAAf;AADX,KAFU,CAAL,CAMJoB,IANI,CAMC,UAAAC,QAAQ,EAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KARI,EASJF,IATI,CASC,UAAAG,YAAY,EAAI;AACpB,UAAIA,YAAY,CAACC,MAAb,CAAoBC,KAAxB,EAA+B;AAC7B,eAAOF,YAAY,CAACG,KAAb,CAAmBD,KAAnB,CAAyBE,GAAzB,CAA6B,UAAAD,KAAK;AAAA,iBAAK;AAC5CE,YAAAA,EAAE,EAAEF,KAAK,CAACE,EADkC;AAE5CC,YAAAA,IAAI,EAAEH,KAAK,CAACG,IAFgC;AAG5CC,YAAAA,MAAM,EAAEJ,KAAK,CAACI,MAH8B;AAI5CC,YAAAA,KAAK,EAAEL,KAAK,CAACK,KAJ+B;AAK5CC,YAAAA,GAAG,EAAEN,KAAK,CAACM;AALiC,WAAL;AAAA,SAAlC,CAAP;AAOD;AACF,KAnBI,CAAP;AAoBD,GA7Ca;AA+CdC,EAAAA,YA/Cc,wBA+CDC,YA/CC,EA+CaC,SA/Cb,EA+CwB;AACpC,QAAI,CAACD,YAAD,IAAiB,CAACC,SAAtB,EAAiC;AAC/B;AACD,KAFD,MAEO;AACL,UAAMC,OAAO,GAAG,+BAAhB;AACA,UAAMlB,OAAO,GAAG;AACdC,QAAAA,aAAa,mBAAYnB,WAAZ;AADC,OAAhB;AAGA,UAAIqC,MAAM,GAAGC,SAAb;AACA,UAAIC,UAAU,GAAGD,SAAjB;AACAtB,MAAAA,KAAK,CAACoB,OAAD,EAAU;AACblB,QAAAA,OAAO,EAAEA;AADI,OAAV,CAAL,CAGGE,IAHH,CAGQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAHhB,EAIGF,IAJH,CAIQ,UAAAG,YAAY;AAAA,eAAKc,MAAM,GAAGd,YAAY,CAACK,EAA3B;AAAA,OAJpB,EAKGR,IALH,CAKQ,YAAM;AACV,YAAMoB,iBAAiB,8CAAuCH,MAAvC,eAAvB;AACArB,QAAAA,KAAK,CAACwB,iBAAD,EAAoB;AACvBC,UAAAA,MAAM,EAAE,MADe;AAEvBvB,UAAAA,OAAO,EAAEA,OAFc;AAGvBwB,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBf,YAAAA,IAAI,EAAEK;AADa,WAAf;AAHiB,SAApB,CAAL,CAOGd,IAPH,CAOQ,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,SAPhB,EAQGF,IARH,CAQQ,UAAAG,YAAY;AAAA,iBAAKgB,UAAU,GAAGhB,YAAY,CAACK,EAA/B;AAAA,SARpB,EASGR,IATH,CASQ,YAAM;AACV,cAAMyB,oBAAoB,8CAAuCR,MAAvC,wBAA2DE,UAA3D,YAA1B;AACAvB,UAAAA,KAAK,CAAC6B,oBAAD,EAAuB;AAC1BJ,YAAAA,MAAM,EAAE,MADkB;AAE1BvB,YAAAA,OAAO,EAAEA,OAFiB;AAG1BwB,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBE,cAAAA,IAAI,EAAEX;AADa,aAAf;AAHoB,WAAvB,CAAL;AAOD,SAlBH;AAmBD,OA1BH;AA2BD;AACF;AArFa,CAAhB;AAwFA,eAAejC,OAAf","sourcesContent":["const clientId = \"1755523544f9437e937f776f3210bde4\";\nconst redirctURL = \"http://localhost:3000/\";\nconst authEndpoint = \"https//accounts.spotify.com/authorize\";\nlet accessToken;\nlet expiresIn;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } else {\n      if (\n        window.location.href.match(/access_token=([^&]*)/) &&\n        window.location.href.match(/expires_in=([^&]*)/)\n      ) {\n        accessToken = window.location.href.match(/access_token=([^&]*)/);\n        expiresIn = window.location.href.match(/expires_in=([^&]*)/);\n        console.log(accessToken);\n        window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n        window.history.pushState(\"Access Token\", null, \"/\");\n        return accessToken;\n      } else {\n        let url = `${authEndpoint}?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirctURL}`;\n        window.location = url;\n      }\n    }\n  },\n\n  search(searchTerm) {\n    accessToken = this.getAccessToken;\n    console.log(accessToken);\n    return fetch(\n      `https://api.spotify.com/v1/search?type=track&q=${Searchterm}`,\n      {\n        headers: { Authorization: `Bearer ${accessToken}` }\n      }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(jsonResponse => {\n        if (jsonResponse.tracks.items) {\n          return jsonResponse.track.items.map(track => ({\n            id: track.id,\n            name: track.name,\n            artist: track.artist,\n            album: track.album,\n            uri: track.uri\n          }));\n        }\n      });\n  },\n\n  savePlaylist(playlistName, trackURIs) {\n    if (!playlistName || !trackURIs) {\n      return;\n    } else {\n      const userUrl = \"https://api.spotify.com/v1/me\";\n      const headers = {\n        Authorization: `Bearer ${accessToken}`\n      };\n      let userId = undefined;\n      let playlistId = undefined;\n      fetch(userUrl, {\n        headers: headers\n      })\n        .then(response => response.json())\n        .then(jsonResponse => (userId = jsonResponse.id))\n        .then(() => {\n          const createPlaylistUrl = `https://api.spotify.com/v1/users/${userId}/playlists`;\n          fetch(createPlaylistUrl, {\n            method: \"POST\",\n            headers: headers,\n            body: JSON.stringify({\n              name: playlistName\n            })\n          })\n            .then(response => response.json())\n            .then(jsonResponse => (playlistId = jsonResponse.id))\n            .then(() => {\n              const addPlaylistTracksUrl = `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`;\n              fetch(addPlaylistTracksUrl, {\n                method: \"POST\",\n                headers: headers,\n                body: JSON.stringify({\n                  uris: trackURIs\n                })\n              });\n            });\n        });\n    }\n  }\n};\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}