{"ast":null,"code":"var clientId = \"1755523544f9437e937f776f3210bde4\";\nvar redirctURL = \"http://localhost:3000/\";\nvar accessToken;\nvar expiresIn;\nvar Spotify = {\n  getAccessToken: function getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } else {\n      var url = window.location.href;\n      var urlAccessToken = url.match(/access_token=([^&]*)/);\n      var urlExpiresIn = url.match(/expires_in=([^&]*)/);\n\n      if (urlAccessToken && urlExpiresIn) {\n        accessToken = urlAccessToken;\n        expiresIn = urlExpiresIn;\n        window.setTimeout(function () {\n          return accessToken = \"\";\n        }, expiresIn * 1000);\n        window.history.pushState(\"Access Token\", null, \"/\");\n      } else {\n        window.location.href = \"https://accounts.spotify.com/authorize?client_id=\".concat(clientId, \"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirctURL, \"\\n            \");\n      }\n    }\n  },\n  search: function search(term) {\n    return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term), {\n      headers: {\n        Authorization: \"Bearer \".concat(accessToken)\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return [];\n      }\n    }).then(function (jsonResponse) {\n      return console.log(jsonResponse);\n    }, jsonResponse.map(function (track) {\n      return {\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.url\n      };\n    }));\n  }\n};\nexport default Spotify;","map":{"version":3,"sources":["/Users/Shared/myProject/jamming/src/util/Spodify.js"],"names":["clientId","redirctURL","accessToken","expiresIn","Spotify","getAccessToken","url","window","location","href","urlAccessToken","match","urlExpiresIn","setTimeout","history","pushState","search","term","fetch","headers","Authorization","then","response","ok","json","jsonResponse","console","log","map","track","id","name","artist","artists","album","uri"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,kCAAjB;AACA,IAAMC,UAAU,GAAG,wBAAnB;AAEA,IAAIC,WAAJ;AACA,IAAIC,SAAJ;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,cADc,4BACG;AACf,QAAIH,WAAJ,EAAiB;AACf,aAAOA,WAAP;AACD,KAFD,MAEO;AACL,UAAMI,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA5B;AACA,UAAIC,cAAc,GAAGJ,GAAG,CAACK,KAAJ,CAAU,sBAAV,CAArB;AACA,UAAIC,YAAY,GAAGN,GAAG,CAACK,KAAJ,CAAU,oBAAV,CAAnB;;AACA,UAAID,cAAc,IAAIE,YAAtB,EAAoC;AAClCV,QAAAA,WAAW,GAAGQ,cAAd;AACAP,QAAAA,SAAS,GAAGS,YAAZ;AACAL,QAAAA,MAAM,CAACM,UAAP,CAAkB;AAAA,iBAAOX,WAAW,GAAG,EAArB;AAAA,SAAlB,EAA4CC,SAAS,GAAG,IAAxD;AACAI,QAAAA,MAAM,CAACO,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AACD,OALD,MAKO;AACLR,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,8DAA2ET,QAA3E,4EAAqJC,UAArJ;AAED;AACF;AACF,GAlBa;AAoBde,EAAAA,MApBc,kBAoBPC,IApBO,EAoBD;AACX,WAAOC,KAAK,0DAAmDD,IAAnD,GAA2D;AACrEE,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,mBAAYlB,WAAZ;AAAf;AAD4D,KAA3D,CAAL,CAGJmB,IAHI,CAGC,UAAAC,QAAQ,EAAI;AAChB,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,OAFD,MAEO;AACL,eAAO,EAAP;AACD;AACF,KATI,EAUJH,IAVI,CAWH,UAAAI,YAAY;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAAJ;AAAA,KAXT,EAYHA,YAAY,CAACG,GAAb,CAAiB,UAAAC,KAAK,EAAI;AACxB,aAAO;AACLC,QAAAA,EAAE,EAAED,KAAK,CAACC,EADL;AAELC,QAAAA,IAAI,EAAEF,KAAK,CAACE,IAFP;AAGLC,QAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiBF,IAHpB;AAILG,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYH,IAJd;AAKLI,QAAAA,GAAG,EAAEN,KAAK,CAACvB;AALN,OAAP;AAOD,KARD,CAZG,CAAP;AAsBD;AA3Ca,CAAhB;AA8CA,eAAeF,OAAf","sourcesContent":["const clientId = \"1755523544f9437e937f776f3210bde4\";\nconst redirctURL = \"http://localhost:3000/\";\n\nlet accessToken;\nlet expiresIn;\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } else {\n      const url = window.location.href;\n      let urlAccessToken = url.match(/access_token=([^&]*)/);\n      let urlExpiresIn = url.match(/expires_in=([^&]*)/);\n      if (urlAccessToken && urlExpiresIn) {\n        accessToken = urlAccessToken;\n        expiresIn = urlExpiresIn;\n        window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n        window.history.pushState(\"Access Token\", null, \"/\");\n      } else {\n        window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirctURL}\n            `;\n      }\n    }\n  },\n\n  search(term) {\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: { Authorization: `Bearer ${accessToken}` }\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          return [];\n        }\n      })\n      .then(\n        jsonResponse => console.log(jsonResponse),\n        jsonResponse.map(track => {\n          return {\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.url\n          };\n        })\n      );\n  }\n};\n\nexport default Spotify;\n"]},"metadata":{},"sourceType":"module"}