{"ast":null,"code":"import _classCallCheck from \"/Users/Shared/myProject/jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Shared/myProject/jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Shared/myProject/jamming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Shared/myProject/jamming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Shared/myProject/jamming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Shared/myProject/jamming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Shared/myProject/jamming/src/components/Track/Track.js\";\nimport React, { Component } from \"react\";\nimport \"./Track.css\";\n\nvar Track =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Track, _Component);\n\n  function Track(props) {\n    var _this;\n\n    _classCallCheck(this, Track);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Track).call(this, props));\n\n    _this.renderAction = function (isRemoval) {\n      return isRemoval ? \"-\" : \"+\";\n    };\n\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Track, [{\n    key: \"addTrack\",\n    value: function addTrack() {\n      this.props.onAdd(this.props.track);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      var track = this.props.track;\n      return React.createElement(\"div\", {\n        className: \"Track\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Track-information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, track.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, track.artist, \" | \", track.album)), React.createElement(\"a\", {\n        className: \"Track-action\",\n        onClick: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", this.renderAction()));\n    }\n  }]);\n\n  return Track;\n}(Component);\n\nexport default Track;","map":{"version":3,"sources":["/Users/Shared/myProject/jamming/src/components/Track/Track.js"],"names":["React","Component","Track","props","renderAction","isRemoval","addTrack","bind","onAdd","track","console","log","name","artist","album"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAKnBC,YALmB,GAKJ,UAAAC,SAAS,EAAI;AAC1B,aAAOA,SAAS,GAAG,GAAH,GAAS,GAAzB;AACD,KAPkB;;AAEjB,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AAFiB;AAGlB;;;;+BAMU;AACT,WAAKJ,KAAL,CAAWK,KAAX,CAAiB,KAAKL,KAAL,CAAWM,KAA5B;AACD;;;6BAEQ;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACA,UAAMM,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAzB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,KAAK,CAACG,IAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,KAAK,CAACI,MADT,SACoBJ,KAAK,CAACK,KAD1B,CAFF,CADF,EAOE;AAAG,QAAA,SAAS,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAE,KAAKR,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEG,KAAKF,YAAL,EAFH,CAPF,CADF;AAcD;;;;EA/BiBH,S;;AAkCpB,eAAeC,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Track.css\";\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.addTrack = this.addTrack.bind(this);\n  }\n\n  renderAction = isRemoval => {\n    return isRemoval ? \"-\" : \"+\";\n  };\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  render() {\n    console.log(this.props);\n    const track = this.props.track;\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{track.name}</h3>\n          <p>\n            {track.artist} | {track.album}\n          </p>\n        </div>\n        <a className=\"Track-action\" onClick={this.addTrack}>\n          {\" \"}\n          {this.renderAction()}\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}