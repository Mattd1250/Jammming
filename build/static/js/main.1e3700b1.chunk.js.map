{"version":3,"sources":["util/Spodify.js","components/SearchBar/SearchBar.js","components/Track/Track.js","components/TrackList/TrackList.js","components/Playlist/Playlist.js","components/SearchResults/SearchResults.js","App.js","serviceWorker.js","index.js"],"names":["accessToken","expiresIn","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","search","bind","assertThisInitialized","handleTermChange","onSearch","e","setState","target","value","react_default","a","createElement","className","placeholder","onChange","onClick","Component","Track","isRemoval","handleAddTrack","handleRemoveTrack","renderAction","onAdd","track","onRemove","console","log","name","artist","album","TrackList","tracks","map","components_Track_Track","key","uri","Playlist","handleNameChange","onNameChange","playlistName","components_TrackList_TrackList","playlistTracks","onSave","SearchResults","searchResults","Spotify","getAccessToken","window","location","href","match","setTimeout","history","pushState","url","concat","searchTerm","fetch","replace","headers","Authorization","then","response","json","jsonResponse","items","id","artists","savePlaylist","_savePlaylist","asyncToGenerator","regenerator_default","mark","_callee","trackUris","userId","playlistId","nameResponse","wrap","_context","prev","next","abrupt","sent","ok","alert","method","Content-Type","body","JSON","stringify","uris","t0","stop","_x","_x2","apply","arguments","App","addTrack","removeTrack","updatePlaylistName","find","savedTrack","push","filter","current","_this2","playlistUris","_this3","searchTracks","components_SearchBar_SearchBar","components_SearchResults_SearchResults","components_Playlist_Playlist","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e3700b1.chunk.js","sourcesContent":["let accessToken;\nlet expiresIn;\nconst clientId = \"59649a72094c46508c95980e7a188a9d\";\nconst authEndpoint = \"https://accounts.spotify.com/authorize\";\nconst redirectUri = \"https://everly.surge.sh\";\n//const redirectUri = \"http://localhost:3000\";\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } else {\n      if (\n        window.location.href.match(/access_token=([^&]*)/) &&\n        window.location.href.match(/expires_in=([^&]*)/)\n      ) {\n        accessToken = window.location.href.match(/access_token=([^&]*)/)[1];\n        expiresIn = window.location.href.match(/expires_in=([^&]*)/)[1];\n        window.setTimeout(() => (accessToken = \"\"), expiresIn * 1000);\n        window.history.pushState(\"Access Token\", null, \"/\");\n        return accessToken;\n      } else {\n        let url = `${authEndpoint}?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n        window.location = url;\n      }\n    }\n  },\n\n  search(searchTerm) {\n    if (!accessToken) {\n      accessToken = this.getAccessToken();\n    }\n    {\n      console.log(accessToken);\n    }\n    return fetch(\n      `https://api.spotify.com/v1/search?type=track&q=${searchTerm.replace(\n        \" \",\n        \"%20\"\n      )}`,\n      {\n        headers: { Authorization: `Bearer ${accessToken}` }\n      }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(jsonResponse => {\n        if (jsonResponse.tracks.items) {\n          return jsonResponse.tracks.items.map(track => ({\n            id: track.id,\n            name: track.name,\n            artist: track.artists[0].name,\n            album: track.album.name,\n            uri: track.uri\n          }));\n        }\n      });\n  },\n\n  async savePlaylist(playlistName, trackUris) {\n    if (!accessToken) {\n      accessToken = this.getAccessToken();\n    }\n    if (!playlistName || !trackUris) {\n      return;\n    }\n    //accessToken = this.getAccessToken();\n    let userId;\n    let playlistId;\n    try {\n      let response = await fetch(\"https://api.spotify.com/v1/me\", {\n        headers: { Authorization: `Bearer ${accessToken}` }\n      });\n      if (!response.ok) {\n        alert(\"There was a problem retrieving your user ID.\");\n        return;\n      }\n      let jsonResponse = await response.json();\n      userId = jsonResponse.id;\n      let nameResponse = await fetch(\n        `https://api.spotify.com/v1/users/${userId}/playlists`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: playlistName\n          })\n        }\n      );\n      if (!nameResponse.ok) {\n        alert(\"There was a problem posting the playlist name.\");\n        return;\n      }\n      jsonResponse = await nameResponse.json();\n      playlistId = jsonResponse.id;\n\n      let tracksResponse = await fetch(\n        `https://api.spotify.com/v1/playlists/${playlistId}/tracks`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ uris: trackUris })\n        }\n      );\n      if (!tracksResponse.ok) {\n        alert(\"There was a problem posting the playlist tracks.\");\n        return;\n      }\n    } catch (error) {\n      console.log(error);\n      return;\n    }\n    return \"Done\";\n  }\n};\n\nexport default Spotify;\n","import React, { Component } from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { term: \"\" };\n    this.search = this.search.bind(this);\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  handleTermChange(e) {\n    this.setState({\n      term: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input\n          placeholder=\"Enter A Song, Album, or Artist\"\n          onChange={this.handleTermChange}\n        />\n        <a onClick={this.search}>SEARCH</a>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport \"./Track.css\";\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isRemoval: false };\n    this.handleAddTrack = this.handleAddTrack.bind(this);\n    this.handleRemoveTrack = this.handleRemoveTrack.bind(this);\n    this.renderAction = this.renderAction.bind(this);\n  }\n\n  renderAction() {\n    if (this.props.isRemoval) {\n      return (\n        <a className=\"Track-action\" onClick={this.handleRemoveTrack}>\n          -\n        </a>\n      );\n    } else {\n      return (\n        <a className=\"Track-action\" onClick={this.handleAddTrack}>\n          +\n        </a>\n      );\n    }\n  }\n\n  handleAddTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  handleRemoveTrack() {\n    this.props.onRemove(this.props.track);\n  }\n\n  render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          {console.log(this.props)}\n          <h3>{this.props.track.name}</h3>\n          <p>\n            {this.props.track.artist} | {this.props.track.album}\n          </p>\n        </div>\n        {this.renderAction()}\n      </div>\n    );\n  }\n}\n\nexport default Track;\n","import React, { Component } from \"react\";\nimport \"../TrackList/TrackList.css\";\nimport Track from \"../Track/Track\";\n\nclass TrackList extends Component {\n  render() {\n    return (\n      <div className=\"TrackList\">\n        {this.props.tracks.map(track => {\n          return (\n            <Track\n              key={track.uri}\n              track={track}\n              onAdd={this.props.onAdd}\n              isRemoval={this.props.isRemoval}\n              onRemove={this.props.onRemove}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default TrackList;\n","import React, { Component } from \"react\";\nimport \"./Playlist.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleNameChange(e) {\n    this.props.onNameChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input\n          value={this.props.playlistName}\n          onChange={this.handleNameChange}\n        />\n        <TrackList\n          tracks={this.props.playlistTracks}\n          onRemove={this.props.onRemove}\n          isRemoval={true}\n        />\n        <a className=\"Playlist-save\" onClick={this.props.onSave}>\n          SAVE TO SPOTIFY\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n","import React, { Component } from \"react\";\nimport \"./SearchResults.css\";\nimport TrackList from \"../TrackList/TrackList\";\n\nclass SearchResults extends Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList\n          tracks={this.props.searchResults}\n          onAdd={this.props.onAdd}\n          isRemoval={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchResults;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Playlist from \"./components/Playlist/Playlist\";\nimport SearchResults from \"./components/SearchResults/SearchResults\";\nimport Spotify from \"./util/Spodify\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [\n        {\n          name: \"Why\",\n          artist: \"NF\",\n          album: \"Too Many Faces\",\n          uri: \"spotify:track:7rjGZWlqqeEMDrAabwZQhr\"\n        }\n      ],\n      playlistName: \"RealMusic\",\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.uri === track.uri)) {\n      return alert(\"This is already in Playlist\");\n    } else {\n      tracks.push(track);\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = this.state.playlistTracks.filter(\n      current => current.id !== track.id\n    );\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const playlistUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, playlistUris).then(\n      response => {\n        if (response) {\n          this.setState({\n            playlistName: \"New Playlist\"\n          });\n          this.setState({\n            playlistTracks: []\n          });\n        }\n      }\n    );\n  }\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(searchTracks => {\n      this.setState({ searchResults: searchTracks });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}