{"ast":null,"code":"import _toConsumableArray from \"/Users/Shared/myProject/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Shared/myProject/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Shared/myProject/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Shared/myProject/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Shared/myProject/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Shared/myProject/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Shared/myProject/GitHub/Jamming/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Shared/myProject/GitHub/Jamming/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Playlist from \"./components/Playlist/Playlist\";\nimport SearchResults from \"./components/SearchResults/SearchResults\";\nimport Spotify from \"./util/Spodify\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      searchResults: [{\n        name: \"Green Lights\",\n        artist: \"NF\",\n        album: \"Preception\",\n        uri: \"spotify:track:2sNOF9WDwhWunNAHPD3Baj\"\n      }, {\n        name: \"Why\",\n        artist: \"NF\",\n        album: \"Too Many Faces\",\n        uri: \"spotify:track:1sNOF9WDwhWunNAHPD3Baj\"\n      }],\n      playlistName: \"RealMusic\",\n      playlistTracks: [{\n        name: \"Let You Down\",\n        artist: \"NF\",\n        album: \"Preception\",\n        uri: \"spotify:track:0sNOF9WDwhWunNAHPD3Baj\"\n      }]\n    };\n    _this.addTrack = _this.addTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTrack = _this.removeTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updatePlaylistName = _this.updatePlaylistName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.savePlaylist = _this.savePlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      if (this.state.playlistTracks.find(function (savedTrack) {\n        return savedTrack.uri !== track.uri;\n      })) {\n        var newPlaylist = [].concat(_toConsumableArray(this.state.playlistTracks), [track]);\n        this.setState({\n          playlistTracks: newPlaylist\n        });\n      }\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var tracks = this.state.playlistTracks;\n      tracks = this.state.playlistTracks.filter(function (current) {\n        return current.uri !== track.uri;\n      });\n      this.setState({\n        playlistTracks: tracks\n      });\n    }\n  }, {\n    key: \"updatePlaylistName\",\n    value: function updatePlaylistName(name) {\n      this.setState({\n        playlistName: name\n      });\n    }\n  }, {\n    key: \"savePlaylist\",\n    value: function savePlaylist() {\n      var _this2 = this;\n\n      var playlistUris = this.state.playlistTracks.map(function (track) {\n        return track.uri;\n      });\n      Spotify.savePlaylist(this.state.playlistName, playlistUris).then(function (response) {\n        if (response) {\n          _this2.setState({\n            playlistName: \"New Playlist\"\n          });\n\n          _this2.setState({\n            playlistTracks: []\n          });\n        }\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search(searchTerm) {\n      var newSearch = Spotify.search(searchTerm).then(function (searchTracks) {\n        return searchTracks;\n      });\n      this.setState({\n        searchResults: newSearch\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Ja\", React.createElement(\"span\", {\n        className: \"highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        onSearch: this.search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-playlist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(SearchResults, {\n        searchResults: this.state.searchResults,\n        onAdd: this.addTrack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Playlist, {\n        playlistName: this.state.playlistName,\n        playlistTracks: this.state.playlistTracks,\n        onRemove: this.removeTrack,\n        onNameChange: this.updatePlaylistName,\n        onSave: this.savePlaylist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Shared/myProject/GitHub/Jamming/src/App.js"],"names":["React","Component","SearchBar","Playlist","SearchResults","Spotify","App","props","state","searchResults","name","artist","album","uri","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","track","find","savedTrack","newPlaylist","setState","tracks","filter","current","playlistUris","map","then","response","searchTerm","newSearch","searchTracks"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport Playlist from \"./components/Playlist/Playlist\";\nimport SearchResults from \"./components/SearchResults/SearchResults\";\nimport Spotify from \"./util/Spodify\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [\n        {\n          name: \"Green Lights\",\n          artist: \"NF\",\n          album: \"Preception\",\n          uri: \"spotify:track:2sNOF9WDwhWunNAHPD3Baj\"\n        },\n        {\n          name: \"Why\",\n          artist: \"NF\",\n          album: \"Too Many Faces\",\n          uri: \"spotify:track:1sNOF9WDwhWunNAHPD3Baj\"\n        }\n      ],\n      playlistName: \"RealMusic\",\n      playlistTracks: [\n        {\n          name: \"Let You Down\",\n          artist: \"NF\",\n          album: \"Preception\",\n          uri: \"spotify:track:0sNOF9WDwhWunNAHPD3Baj\"\n        }\n      ]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    if (\n      this.state.playlistTracks.find(savedTrack => savedTrack.uri !== track.uri)\n    ) {\n      const newPlaylist = [...this.state.playlistTracks, track];\n      this.setState({\n        playlistTracks: newPlaylist\n      });\n    }\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = this.state.playlistTracks.filter(\n      current => current.uri !== track.uri\n    );\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const playlistUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, playlistUris).then(\n      response => {\n        if (response) {\n          this.setState({\n            playlistName: \"New Playlist\"\n          });\n          this.setState({\n            playlistTracks: []\n          });\n        }\n      }\n    );\n  }\n\n  search(searchTerm) {\n    let newSearch = Spotify.search(searchTerm).then(\n      searchTracks => searchTracks\n    );\n    this.setState({ searchResults: newSearch });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}\n            />\n            <Playlist\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}